
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initialnonassocIFELSEIFELSEnonassocSWITCHnonassocCASEnonassocDEFAULTBREAK CASE COLON COMMA DEFAULT ELSE ELSEIF FLOAT FOR ID IF INT LBRACE LPAREN NUMBER OPERATOR RBRACE RETURN RPAREN SEMICOLON SWITCH\n    statement1 : for_loop1\n              | ifstatement4\n              | other_statement1\n              | empty\n    \n    for_loop1 : FOR LPAREN assignment1 SEMICOLON condition1 SEMICOLON update1 RPAREN compound_statement1\n    \n    assignment1 : INT ID OPERATOR expression1\n               | ID OPERATOR expression1\n    \n    condition1 : expression1\n    \n    update1 : ID OPERATOR OPERATOR\n           | ID OPERATOR expression1\n    \n    expression1 : expression1 OPERATOR expression1\n               | expression1 OPERATOR OPERATOR expression1\n               | LPAREN expression1 RPAREN\n               | ID\n               | NUMBER\n    \n    compound_statement1 : LBRACE statements1 RBRACE\n    \n    statements1 : statement1\n               | statements1 statement1\n    \n    other_statement1 : ID OPERATOR expression1 SEMICOLON\n    function2 : type2 ID LPAREN params2 RPAREN LBRACE statements2 RBRACE function2\n                | type2 ID LPAREN RPAREN LBRACE statements2 RBRACE function2\n                | emptyparams2 : param2\n              | params2 COMMA param2param2 : type2 IDtype2 : INT\n            | FLOATstatements2 : statement2\n                  | statements2 statement2statement2 : declaration2\n                 | expression2 SEMICOLON\n                 | RETURN expression2 SEMICOLONdeclaration2 : type2 ID SEMICOLON\n                   | type2 ID COMMA ID SEMICOLONexpression2 : term2\n                  | expression2 OPERATOR term2term2 : factor2\n            | term2 OPERATOR factor2\n    factor2 : NUMBER\n              | ID\n              | LPAREN expression2 RPARENifstatement4 : IF LPAREN expr4 RPAREN LBRACE statements4 RBRACE ifelse4\n          | IF expr4 LBRACE statements4 RBRACEifelse4 : ELSEIF LPAREN expr4 RPAREN LBRACE statements4 RBRACE ifelse4\n          | ELSE LBRACE statements4 RBRACE\n          | emptystatements4 : statements4 statements4 SEMICOLON\n          | expr4 \n          | emptyexpr4 : expr4 OPERATOR OPERATOR expr4\n          | expr4 OPERATOR expr4\n          | ID\n          | NUMBER\n          \n    switch_statement5 : SWITCH use_ornot5 LBRACE case_list5 DEFAULT COLON statement_list5 RBRACE\n    use_ornot5 : LPAREN ID RPAREN\n              | ID \n    case_list5 : case_entry5 case_list5\n              | empty\n    \n    case_entry5 : CASE NUMBER COLON statement_list5\n    \n    statement_list5 : statement5 SEMICOLON statement_list5\n                   | empty\n    \n    statement5 : ID\n              | BREAK\n    empty :\n    initial : statement1\n            | function2\n            | ifstatement4\n            | switch_statement5\n    '
    
_lr_action_items = {'IF':([0,6,7,44,69,107,125,128,138,139,145,146,147,148,150,151,152,155,156,],[11,-1,-3,-19,-43,-64,-42,-46,-5,11,11,-17,-2,-4,-45,-16,-18,-64,-44,]),'SWITCH':([0,],[12,]),'FOR':([0,6,7,44,69,107,125,128,138,139,145,146,147,148,150,151,152,155,156,],[13,-1,-3,-19,-43,-64,-42,-46,-5,13,13,-17,-2,-4,-45,-16,-18,-64,-44,]),'ID':([0,6,7,9,11,12,14,15,17,18,20,21,23,25,29,32,33,37,39,43,44,47,48,49,50,51,57,59,63,65,67,68,69,70,76,78,80,82,83,84,85,87,92,93,94,95,96,98,102,103,104,106,107,117,118,123,125,128,130,132,135,136,138,139,142,144,145,146,147,148,150,151,152,153,154,155,156,],[10,-1,-3,16,20,24,-26,-27,27,20,-52,-53,35,38,27,20,20,58,60,27,-19,-48,20,-49,-51,20,27,27,81,27,20,20,-43,-50,27,81,99,81,81,-28,-30,81,20,-47,111,111,115,81,-29,-31,81,81,-64,-33,134,-32,-42,-46,111,27,20,20,-5,10,-34,20,10,-17,-2,-4,-45,-16,-18,20,20,-64,-44,]),'$end':([0,1,2,3,4,5,6,7,8,44,69,101,107,116,120,121,125,128,129,133,138,150,151,155,156,],[-64,0,-65,-66,-2,-68,-1,-3,-4,-19,-43,-64,-64,-64,-21,-22,-42,-46,-54,-20,-5,-45,-16,-64,-44,]),'INT':([0,25,26,62,63,78,83,84,85,98,101,102,103,116,117,123,142,],[14,37,14,14,14,14,14,-28,-30,14,14,-29,-31,14,-33,-32,-34,]),'FLOAT':([0,26,62,63,78,83,84,85,98,101,102,103,116,117,123,142,],[15,15,15,15,15,15,-28,-30,15,15,-29,-31,15,-33,-32,-34,]),'RBRACE':([6,7,20,21,32,44,47,48,49,50,67,69,70,83,84,85,92,93,94,98,102,103,107,108,110,117,123,125,128,130,136,137,138,139,142,144,145,146,147,148,150,151,152,153,154,155,156,],[-1,-3,-52,-53,-64,-19,-48,69,-49,-51,-64,-43,-50,101,-28,-30,107,-47,-64,116,-29,-31,-64,129,-61,-33,-32,-42,-46,-64,-64,-60,-5,-64,-34,150,151,-17,-2,-4,-45,-16,-18,-64,155,-64,-44,]),'OPERATOR':([10,19,20,21,27,28,30,31,33,38,43,45,47,50,58,64,66,70,75,77,81,86,88,89,90,91,97,100,105,115,119,122,124,132,141,143,],[17,33,-52,-53,-14,43,-15,33,51,59,65,43,33,33,76,43,-13,33,43,43,-40,104,106,-37,-39,43,43,104,104,132,-41,106,-38,140,43,33,]),'LPAREN':([11,12,13,16,17,29,43,57,59,63,65,76,78,82,83,84,85,87,98,102,103,104,106,117,123,126,132,142,],[18,23,25,26,29,29,29,29,29,82,29,29,82,82,82,-28,-30,82,82,-29,-31,82,82,-33,-32,135,29,-34,]),'NUMBER':([11,17,18,20,21,29,32,33,43,47,48,49,50,51,55,57,59,63,65,67,68,70,76,78,82,83,84,85,87,92,93,98,102,103,104,106,117,123,132,135,136,142,144,153,154,],[21,30,21,-52,-53,30,21,21,30,-48,21,-49,-51,21,73,30,30,90,30,21,21,-50,30,90,90,90,-28,-30,90,21,-47,90,-29,-31,90,90,-33,-32,30,21,21,-34,21,21,21,]),'LBRACE':([19,20,21,22,24,41,46,50,56,61,70,127,131,149,],[32,-52,-53,34,-56,63,67,-51,-55,78,-50,136,139,153,]),'RPAREN':([20,21,26,27,30,31,35,40,42,45,50,60,64,66,70,79,81,88,89,90,91,100,114,119,122,124,140,141,143,],[-52,-53,41,-14,-15,46,56,61,-23,66,-51,-25,-11,-13,-50,-24,-40,-35,-37,-39,-12,119,131,-41,-36,-38,-9,-10,149,]),'SEMICOLON':([20,21,27,28,30,32,36,47,48,49,50,64,66,67,68,70,74,75,77,81,86,88,89,90,91,92,93,97,99,105,109,111,112,119,122,124,134,136,144,153,154,],[-52,-53,-14,44,-15,-64,57,-48,-64,-49,-51,-11,-13,-64,93,-50,96,-8,-7,-40,103,-35,-37,-39,-12,-64,-47,-6,117,123,130,-62,-63,-41,-36,-38,142,-64,-64,-64,-64,]),'CASE':([34,53,95,110,113,130,137,],[55,55,-64,-61,-59,-64,-60,]),'DEFAULT':([34,52,53,54,72,95,110,113,130,137,],[-64,71,-64,-58,-57,-64,-61,-59,-64,-60,]),'COMMA':([40,42,60,79,99,],[62,-23,-25,-24,118,]),'RETURN':([63,78,83,84,85,98,102,103,117,123,142,],[87,87,87,-28,-30,87,-29,-31,-33,-32,-34,]),'COLON':([71,73,],[94,95,]),'BREAK':([94,95,130,],[112,112,112,]),'ELSEIF':([107,155,],[126,126,]),'ELSE':([107,155,],[127,127,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'initial':([0,],[1,]),'statement1':([0,139,145,],[2,146,152,]),'function2':([0,101,116,],[3,120,133,]),'ifstatement4':([0,139,145,],[4,147,147,]),'switch_statement5':([0,],[5,]),'for_loop1':([0,139,145,],[6,6,6,]),'other_statement1':([0,139,145,],[7,7,7,]),'empty':([0,32,34,48,53,67,68,92,94,95,101,107,116,130,136,139,144,145,153,154,155,],[8,49,54,49,54,49,49,49,110,110,121,128,121,110,49,148,49,148,49,49,128,]),'type2':([0,26,62,63,78,83,98,101,116,],[9,39,39,80,80,80,80,9,9,]),'expr4':([11,18,32,33,48,51,67,68,92,135,136,144,153,154,],[19,31,47,50,47,70,47,47,47,143,47,47,47,47,]),'use_ornot5':([12,],[22,]),'expression1':([17,29,43,57,59,65,76,132,],[28,45,64,75,77,91,97,141,]),'assignment1':([25,],[36,]),'params2':([26,],[40,]),'param2':([26,62,],[42,79,]),'statements4':([32,48,67,68,92,136,144,153,154,],[48,68,92,68,68,144,68,154,68,]),'case_list5':([34,53,],[52,72,]),'case_entry5':([34,53,],[53,53,]),'condition1':([57,],[74,]),'statements2':([63,78,],[83,98,]),'statement2':([63,78,83,98,],[84,84,102,102,]),'declaration2':([63,78,83,98,],[85,85,85,85,]),'expression2':([63,78,82,83,87,98,],[86,86,100,86,105,86,]),'term2':([63,78,82,83,87,98,104,],[88,88,88,88,88,88,122,]),'factor2':([63,78,82,83,87,98,104,106,],[89,89,89,89,89,89,89,124,]),'statement_list5':([94,95,130,],[108,113,137,]),'statement5':([94,95,130,],[109,109,109,]),'update1':([96,],[114,]),'ifelse4':([107,155,],[125,156,]),'compound_statement1':([131,],[138,]),'statements1':([139,],[145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> initial","S'",1,None,None,None),
  ('statement1 -> for_loop1','statement1',1,'p_statement1','combined.py',124),
  ('statement1 -> ifstatement4','statement1',1,'p_statement1','combined.py',125),
  ('statement1 -> other_statement1','statement1',1,'p_statement1','combined.py',126),
  ('statement1 -> empty','statement1',1,'p_statement1','combined.py',127),
  ('for_loop1 -> FOR LPAREN assignment1 SEMICOLON condition1 SEMICOLON update1 RPAREN compound_statement1','for_loop1',9,'p_for_loop1','combined.py',133),
  ('assignment1 -> INT ID OPERATOR expression1','assignment1',4,'p_assignment1','combined.py',139),
  ('assignment1 -> ID OPERATOR expression1','assignment1',3,'p_assignment1','combined.py',140),
  ('condition1 -> expression1','condition1',1,'p_condition1','combined.py',146),
  ('update1 -> ID OPERATOR OPERATOR','update1',3,'p_update1','combined.py',152),
  ('update1 -> ID OPERATOR expression1','update1',3,'p_update1','combined.py',153),
  ('expression1 -> expression1 OPERATOR expression1','expression1',3,'p_expression1','combined.py',162),
  ('expression1 -> expression1 OPERATOR OPERATOR expression1','expression1',4,'p_expression1','combined.py',163),
  ('expression1 -> LPAREN expression1 RPAREN','expression1',3,'p_expression1','combined.py',164),
  ('expression1 -> ID','expression1',1,'p_expression1','combined.py',165),
  ('expression1 -> NUMBER','expression1',1,'p_expression1','combined.py',166),
  ('compound_statement1 -> LBRACE statements1 RBRACE','compound_statement1',3,'p_compound_statement1','combined.py',175),
  ('statements1 -> statement1','statements1',1,'p_statements1','combined.py',181),
  ('statements1 -> statements1 statement1','statements1',2,'p_statements1','combined.py',182),
  ('other_statement1 -> ID OPERATOR expression1 SEMICOLON','other_statement1',4,'p_other_statement1','combined.py',191),
  ('function2 -> type2 ID LPAREN params2 RPAREN LBRACE statements2 RBRACE function2','function2',9,'p_function2','combined.py',204),
  ('function2 -> type2 ID LPAREN RPAREN LBRACE statements2 RBRACE function2','function2',8,'p_function2','combined.py',205),
  ('function2 -> empty','function2',1,'p_function2','combined.py',206),
  ('params2 -> param2','params2',1,'p_params2','combined.py',214),
  ('params2 -> params2 COMMA param2','params2',3,'p_params2','combined.py',215),
  ('param2 -> type2 ID','param2',2,'p_param2','combined.py',222),
  ('type2 -> INT','type2',1,'p_type2','combined.py',226),
  ('type2 -> FLOAT','type2',1,'p_type2','combined.py',227),
  ('statements2 -> statement2','statements2',1,'p_statements2','combined.py',231),
  ('statements2 -> statements2 statement2','statements2',2,'p_statements2','combined.py',232),
  ('statement2 -> declaration2','statement2',1,'p_statement2','combined.py',239),
  ('statement2 -> expression2 SEMICOLON','statement2',2,'p_statement2','combined.py',240),
  ('statement2 -> RETURN expression2 SEMICOLON','statement2',3,'p_statement2','combined.py',241),
  ('declaration2 -> type2 ID SEMICOLON','declaration2',3,'p_declaration2','combined.py',245),
  ('declaration2 -> type2 ID COMMA ID SEMICOLON','declaration2',5,'p_declaration2','combined.py',246),
  ('expression2 -> term2','expression2',1,'p_expression2','combined.py',253),
  ('expression2 -> expression2 OPERATOR term2','expression2',3,'p_expression2','combined.py',254),
  ('term2 -> factor2','term2',1,'p_term2','combined.py',261),
  ('term2 -> term2 OPERATOR factor2','term2',3,'p_term2','combined.py',262),
  ('factor2 -> NUMBER','factor2',1,'p_factor2','combined.py',270),
  ('factor2 -> ID','factor2',1,'p_factor2','combined.py',271),
  ('factor2 -> LPAREN expression2 RPAREN','factor2',3,'p_factor2','combined.py',272),
  ('ifstatement4 -> IF LPAREN expr4 RPAREN LBRACE statements4 RBRACE ifelse4','ifstatement4',8,'p_ifstatement4','combined.py',320),
  ('ifstatement4 -> IF expr4 LBRACE statements4 RBRACE','ifstatement4',5,'p_ifstatement4','combined.py',321),
  ('ifelse4 -> ELSEIF LPAREN expr4 RPAREN LBRACE statements4 RBRACE ifelse4','ifelse4',8,'p_ifelse4','combined.py',328),
  ('ifelse4 -> ELSE LBRACE statements4 RBRACE','ifelse4',4,'p_ifelse4','combined.py',329),
  ('ifelse4 -> empty','ifelse4',1,'p_ifelse4','combined.py',330),
  ('statements4 -> statements4 statements4 SEMICOLON','statements4',3,'p_statements4','combined.py',339),
  ('statements4 -> expr4','statements4',1,'p_statements4','combined.py',340),
  ('statements4 -> empty','statements4',1,'p_statements4','combined.py',341),
  ('expr4 -> expr4 OPERATOR OPERATOR expr4','expr4',4,'p_expr4','combined.py',348),
  ('expr4 -> expr4 OPERATOR expr4','expr4',3,'p_expr4','combined.py',349),
  ('expr4 -> ID','expr4',1,'p_expr4','combined.py',350),
  ('expr4 -> NUMBER','expr4',1,'p_expr4','combined.py',351),
  ('switch_statement5 -> SWITCH use_ornot5 LBRACE case_list5 DEFAULT COLON statement_list5 RBRACE','switch_statement5',8,'p_switch_statement5','combined.py',367),
  ('use_ornot5 -> LPAREN ID RPAREN','use_ornot5',3,'p_use_ornot5','combined.py',373),
  ('use_ornot5 -> ID','use_ornot5',1,'p_use_ornot5','combined.py',374),
  ('case_list5 -> case_entry5 case_list5','case_list5',2,'p_case_list5','combined.py',378),
  ('case_list5 -> empty','case_list5',1,'p_case_list5','combined.py',379),
  ('case_entry5 -> CASE NUMBER COLON statement_list5','case_entry5',4,'p_case_entry5','combined.py',389),
  ('statement_list5 -> statement5 SEMICOLON statement_list5','statement_list5',3,'p_statement_list5','combined.py',396),
  ('statement_list5 -> empty','statement_list5',1,'p_statement_list5','combined.py',397),
  ('statement5 -> ID','statement5',1,'p_statement5','combined.py',407),
  ('statement5 -> BREAK','statement5',1,'p_statement5','combined.py',408),
  ('empty -> <empty>','empty',0,'p_empty','combined.py',415),
  ('initial -> statement1','initial',1,'p_initial','combined.py',426),
  ('initial -> function2','initial',1,'p_initial','combined.py',427),
  ('initial -> ifstatement4','initial',1,'p_initial','combined.py',428),
  ('initial -> switch_statement5','initial',1,'p_initial','combined.py',429),
]
